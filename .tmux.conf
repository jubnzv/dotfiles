unbind C-b
set -g prefix `
bind-key ` send-prefix

# Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'

# Set vim keys in copy or choice mode
set-window-option -g mode-keys vi

# Focus events enabled for terminals that support them
set -g focus-events on

# Super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Refresh 'status-left' and 'status-right' more often
set -g status-interval 5

# History
set-option -g history-limit 50000

# Use emacs / readline key-bindings in the tmux command prompt
set -g status-keys "emacs"

# Unbind *all* default keybinds
# unbind-key -a

# Fix cursor shape:
# https://github.com/neovim/neovim/wiki/FAQ#cursor-shape-doesnt-change-in-tmux
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Correct the TERM variable required by neovim:
# https://github.com/neovim/neovim/wiki/FAQ#home-or-some-other-special-key-doesnt-work
set -g default-terminal "screen-256color"

# rxvt-unicode + tmux do italic instead of reverse
# set -g terminal-overrides 'rxvt-unicode*:sitm@'

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Disable escape waiting
set -sg escape-time 0

# Enable mouse
set -g mouse on

# Splits in the same directory
bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Run terminal emulator outside tmux in current directory
bind T run -b 'kitty -d #{pane_current_path}'

# Windows navigation
bind t new-window -c "#{pane_current_path}"
bind r last-window      # Go to recent window
bind [ previous-window
bind ] next-window

# Rename window to the current directory name
bind-key R rename-window "#{b:pane_current_path}"

# Manage panes
bind ! break-pane # Open in new window
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Move panes between existing windows.
bind-key m command-prompt -p "Move to window (e.g. 3.1): #"  "join-pane -h -t '%%'"
bind-key M command-prompt -p "Move to session (e.g. main:3): #"  "move-pane -t '%%'"

# Renumber windows when one of them is closed
set-option -g renumber-windows on

# Renumber sessions
set-hook -g session-created "run ~/.tmux/renumber-sessions.sh"
set-hook -g session-closed  "run ~/.tmux/renumber-sessions.sh"

# Create new window with active pane.
bind-key b command-prompt -p "Break pane: #"  "break-pane -t '%%'"

# Clear screen and scrollback buffer
bind-key L send-keys -R C-l \; clear-history

# Clear screen with prefix-<C-l>.
bind C-l send-keys 'C-l'

# Swap current window with a top window
bind-key ! swap-window -t 1

# Toggle zoom on the last pane
bind-key Z select-pane -l \; resize-pane -Z

# Use FZF to switch Tmux sessions
bind-key s neww '~/.tmux/session-finder/session-finder.bash finder'
bind-key -n 'M-r' run -b '~/.tmux/session-finder/session-finder.bash last'
bind-key -n 'M-]' run -b '~/.tmux/session-finder/session-finder.bash next'
bind-key -n 'M-[' run -b '~/.tmux/session-finder/session-finder.bash prev'

# Kill session by name
bind @ command-prompt "kill-session -t %1"

# Kill active session and attach to the next one
bind-key K confirm-before -p "Kill #S (y/n)?" "run-shell 'tmux switch-client -n \\\; kill-session -t \"\$(tmux display-message -p \"#S\")\"'"

# Reload config
bind-key C source-file ~/.tmux.conf \; display-message "Config reloaded"

# Create new window if doesn't exist yet
bind-key 0 if-shell 'tmux select-window -t :0' '' 'new-window -t :0'
bind-key 1 if-shell 'tmux select-window -t :1' '' 'new-window -t :1'
bind-key 2 if-shell 'tmux select-window -t :2' '' 'new-window -t :2'
bind-key 3 if-shell 'tmux select-window -t :3' '' 'new-window -t :3'
bind-key 4 if-shell 'tmux select-window -t :4' '' 'new-window -t :4'
bind-key 5 if-shell 'tmux select-window -t :5' '' 'new-window -t :5'
bind-key 6 if-shell 'tmux select-window -t :6' '' 'new-window -t :6'
bind-key 7 if-shell 'tmux select-window -t :7' '' 'new-window -t :7'
bind-key 8 if-shell 'tmux select-window -t :8' '' 'new-window -t :8'
bind-key 9 if-shell 'tmux select-window -t :9' '' 'new-window -t :9'

# Update terminal window title
set-option -g set-titles on
set-option -g set-titles-string "tmux: #S | #W"

# {{{ Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  # | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# }}}

# Vim-style in copy-mode
bind-key Escape copy-mode
bind-key v copy-mode
bind-key -T copy-mode-vi Escape send -X cancel
bind-key p paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi r send -X rectangle-toggle

# {{{ COLORSCHEME: gruvbox dark
# default statusbar colors
set-option -g status-bg colour237 #bg1
set-option -g status-fg colour223 #fg1

set -g window-status-style bg=colour214,fg=colour237
set -g window-status-activity-style bg=colour237,fg=colour248
set -g window-status-current-style bg=default,fg=colour237
set -g pane-active-border-style fg=colour250
set -g pane-border-style fg=colour237
set -g message-style bg=colour239,fg=colour223
set -g message-command-style bg=colour239,fg=colour223

set -g display-panes-active-colour colour250 #fg2
set -g display-panes-colour colour237 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# bell
set-window-option -g window-status-bell-style fg=colour235,bg=colour167 #bg, red
# }}}

# {{{ Status bar settings
set -g status on
set -g status-position top

set-option -g status-justify "left"
set-option -g status-left-length "80"
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[fg=colour241, bg=colour237, nobold, noitalics, nounderscore]"
set-option -g status-right ' #(~/.tmux/session-finder/session-finder.bash status)'

set-window-option -g window-status-current-format "#[fg=colour237, bg=colour246, :nobold, noitalics, nounderscore]#[fg=colour237, bg=colour246] #I #[fg=colour237, bg=colour246, bold] #{?window_zoomed_flag,üîç,}#W #[fg=colour214, bg=colour237, nobold, noitalics, nounderscore]"
set-window-option -g window-status-format "#[fg=colour237,bg=colour239,noitalics]#[fg=colour248,bg=colour239] #I #[fg=colour248, bg=colour239] #{?window_zoomed_flag,üîç,}#W #[fg=colour239, bg=colour237, noitalics]"
# }}}

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# vim: foldmethod=marker sw=4
