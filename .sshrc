#!/usr/bin/env bash

# {{{ Environment
export SHELL=`which bash`
# export LANG=C
# export LC_ALL=C

# Maybe there is no `xterm-kitty` in terminfo
# export TERM=xterm
# }}}

# {{{ Aliases
alias pd='pushd'
alias pdd='popd'
alias dr='dirs -p'
alias q='exit'
alias s='sudo'

if [[ -x "$(command -v vim)" ]]; then
    alias v=`which vim`
else
    alias v=`which vi`
fi

if [[ ! -x "$(command -v ag)" ]]; then
    alias grep='ag'
else
    alias ag='grep'
fi
# }}}

# {{{ User preferences
homes=('/home/komarov_g' '/home/tester' '/home/jubnzv')
for h in $homes; do
    if [ -d $h ]; then
        # export HOME=$h
        cd $h
        break
    fi
done
# }}}

# {{{ Load vim settings
setup_vim() {
    export VIMINIT="let \$MYVIMRC='$SSHHOME/.sshrc.d/.vimrc' | source \$MYVIMRC"
}

setup_vim
# }}}

# {{{ Collect some information about this target
$SSHHOME/.sshrc.d/target-info.sh > $SSHHOME/target_info
# }}}

# {{{ Load tmux settings
setup_tmux() {
  local tmuxname=komarov_g

  local TMUXDIR=$SSHHOME/.tmux.${tmuxname}
  if ! [ -d $TMUXDIR ]; then
    rm -rf $TMUXDIR
    mkdir -p $TMUXDIR
  fi

  local TMUX_COMMAND="/usr/bin/tmux -f $SSHHOME/.sshrc.d/.tmux.conf "

  # Initialize session
  $TMUX_COMMAND $@ new -s ${tmuxname} -d -D
  $TMUX_COMMAND send-keys -t ${tmuxname} 'cat $SSHHOME/target_info' ENTER

  # Attach to created session
  exec $TMUX_COMMAND attach-session -t ${tmuxname}
}

setup_tmux
# }}}

# {{{ Load custom shell binds
bind -f $SSHHOME/.sshrc.d/.inputrc
# }}}

# vim:foldmethod=marker:foldenable:foldlevel=0:sw=4:tw=120
