snippet print
alias pr
	std::cout << $0 << std::endl;
snippet print_err
alias pre
	std::cerr << $0 << std::endl;

# {{{ Simple execution time measuring
snippet simple_timer
	{
		auto start = std::chrono::high_resolution_clock::now();
		$1
		auto stop = std::chrono::high_resolution_clock::now();
		auto duration = std::chrono::duration_cast<std::chrono::microseconds>(stop - start);
        ${2:std::cout << duration.count() << std::endl;}
	}
# }}}

# {{{ Operators overloaded outside a class
snippet op<<
options head
	std::ostream &operator<< (std::ostream &out, const ${1} &${2:obj})
	{
		$0
		return out;
	}
snippet op>>
options head
	std::istream &operator>> (std::istream &in, ${1} &${2:obj})
	{
		$0
		return in;
	}
snippet op()
options head
	bool operator() (const ${1}& lhs, const $1 &rhs) const
	{
		$0
	}
snippet op>
options head
	bool operator> (const ${1}& lhs, const $1 &rhs)
	{
		$0
	}
snippet op>=
options head
	bool operator>= (const ${1}& lhs, const $1 &rhs)
	{
		$0
	}
snippet op<
options head
	bool operator< (const ${1}& lhs, const $1 &rhs)
	{
		$0
	}
snippet op<=
options head
	bool operator<= (const ${1}& lhs, const $1 &rhs)
	{
		$0
	}
snippet op==
options head
	bool operator== (const ${1}& lhs, const $1 &rhs)
	{
		$0
	}
# }}}

# {{{ Operators overloaded inside the class
snippet iop=
options head
     ${1} &operator=(const ${1} &)
	 {
		$0
		return *this;
	 }
# }}}

# {{{ Include-Guard
snippet		once
alias		include-guard
options		head
abbr #ifndef ... #define ... #endif
	#ifndef ${1:#:SYMBOL}
	#define $1

	${0:TARGET}
	#endif // $1
# }}}

# {{{ Comments
snippet		clang-format-multi
options		head
	// clang-format off
	${0}
	// clang-format on
snippet		clang-format
options		head
	// clang-format ${0}
# }}}

snippet		fora
options		head
	for (${1:auto const& }${2:var} : ${3:container}) {
		${0:TARGET}
	}

# {{{ Macroses
# std::invoke before C++17
# See: https://isocpp.org/wiki/faq/pointers-to-members
snippet def_call_member_fn
options head
	#define CALL_MEMBER_FN(object,ptrToMember)  ((object).*(ptrToMember))
# }}}
