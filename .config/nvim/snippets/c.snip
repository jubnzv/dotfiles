# {{{ Include-Guard
snippet     once
options     head
alias       include-guard
abbr #ifndef ... #define ... #endif
    #ifndef ${1:#:SYMBOL}
        #define $1

        ${0:TARGET}
    #endif /* !$1 */
# }}}

# {{{ Printing
snippet pr
abbr    printf("...\n", ...);
    printf("${1}\n"${2});

# Debug prints
# :g/\/\/\ prdbg$/d to clean them all
snippet     prd
alias       prdbg
options     head
    printf("%s:%d ${1}\n", __func__, __LINE__${2}); // prdbg
snippet     prdh
options     head
    printf("%s:%d\n", __func__, __LINE__); // prdbg
snippet     prda
options     head
    printf("%s:%d ${1}=%${2:fmt}\n", __func__, __LINE__, $1); // prdbg
    ${0}
snippet     prdk
options     head
    printk("%s:%d ${1}\n", __func__, __LINE__${2}); // prdbg

# Print bits of integer
snippet prb
options head
alias   print-bits
    int i;
    for (i = 0; i < ${1:#:NB}; i++) {
        printf("%c", (${2:#:SRC} & (1 << i)) ? '1' : '0');
        if ((i + 1) % 16 == 0)
            printf("\n");
    }

# }}}

# {{{ Bitwise
# Set a bit
snippet     bws
# abbr |=
    |= (1 << ${0:BIT})

# Clear a bit
snippet     bwc
# abbr &=
    &= ~(1 << ${0:BIT})

# Toggle a bit
snippet     bwt
# abbr ^=
    ^= (1 << ${0:BIT})

# Test a bit
snippet     bwtt
    & (1 << ${0:BIT})

# }}}

# {{{ Comments
snippet cmret
    0 if success, -1 otherwise
snippet cmrete
    0 if success, -1 and sets errno otherwise

snippet     cmft
options     head
    /* clang-format off */
        ${0}
    /* clang-format on */
# }}}

# {{{ fork
snippet     frk
options     head
abbr        fork ()
    switch (child_pid = fork()) {
    case -1:
        perror("fork");
        exit(EXIT_FAILURE);
    case 0: {
        ${0:TARGET}
        exit(EXIT_SUCCESS);
    }
    default:
        break;
    }
# }}}

# {{{ signals
snippet     sig
options     head
    struct sigaction sa;
    sa.sa_flags = ${1:flags};
    sa.sa_handler = ${2:handler};
    sigaction(SIG${3:signal}, &sa, NULL);
# }}}

# {{{ waitpid
snippet     wpid
options     head
abbr        waitpid()
    int return_status;
    if (waitpid(child_pid, &return_status, 0) == -1) {
        perror("waitpid");
        exit(EXIT_FAILURE);
    }
# }}}

# {{{ Checking errors
snippet     cherr
options     head
    if ((${1:FUNCALL}) == -1) {
        perror(${2:ERR_MSG});
        exit(EXIT_FAILURE);
    }
# }}}

# vim:fdm=marker:foldlevel=0:foldenable:
