snippet hdr
#include <iostream>
#include <map>
#include <unordered_map>
#include <set>
#include <unordered_set>
#include <vector>
#include <string>
#include <algorithm>
#include <utility>

using namespace std;

$1
endsnippet

snippet exectime
{
	auto start__ = std::chrono::high_resolution_clock::now();
	${0:${VISUAL}}
	auto end__ = std::chrono::high_resolution_clock::now();
	std::cout << __func__ << ":" << __LINE__ << ": " << std::chrono::duration_cast<std::chrono::nanoseconds>(end__ - start__).count() << "ns" << std::endl;
}
endsnippet

snippet pr
std::cout << $1 << std::endl;
endsnippet

snippet pre
std::cerr << $1 << std::endl;
endsnippet

snippet prv
for (auto const &vv : ${1:v})
  std::cout << vv << " ";
std::cout << std::endl;
endsnippet

snippet prm
for (auto const &m : ${1:M})
  std::cout << m.first << ":" << m.second << "${2:\n}";
std::cout << std::endl;
endsnippet

snippet qpr
qDebug() << $1;
endsnippet

snippet qprd
qDebug() << __LINE__ << $1; // prdbg
endsnippet

snippet spr
spdlog::debug("${2:\{\}}", $1);
endsnippet

snippet inc
#include <${1:iostream}>
endsnippet
