snippet inc2
#include "${1:`vim_snippets#Filename("$1.h")`}"
endsnippet

snippet exf
exit(EXIT_FAILURE);
endsnippet

snippet cmrete
@return 0 if success, -1 and sets errno otherwise
endsnippet

snippet once
#ifndef ${1:`!p snip.rv = snip.fn.replace('.', '_').replace('-', '_').upper()`}
#define $1

${VISUAL}$0

#endif // $1
endsnippet

snippet extern_c
#ifdef __cplusplus
extern "C" {
#endif

${0:${VISUAL}}

#ifdef __cplusplus
}
#endif
endsnippet

snippet clangfmt_off
// clang-format off
${0:${VISUAL}}
// clang-format on
endsnippet

snippet prd
printf("%s:%d: ${0}\n", __func__, __LINE__${1});
endsnippet

snippet gccdiag
#if defined(__GNUC__)
#    pragma GCC diagnostic ignored "$1"
#    pragma GCC diagnostic push
#endif // __GNUC__
${0:${VISUAL}}
#if defined(__GNUC__)
#    pragma GCC diagnostic pop
#endif // __GNUC__
endsnippet
