snippet main
if __name__ == '__main__':
	$0
endsnippet

snippet     pdb
import pdb; pdb.set_trace()
endsnippet

snippet		pdbq
import pdb; from PyQt5.QtCore import pyqtRemoveInputHook as _pr; _pr(); pdb.set_trace()
endsnippet

snippet check_file
if not os.path.isfile(${1:fpath}):
	print('%s: not found' % $1)
	$0
endsnippet

snippet for_files
import os
for file in os.listdir("${1}"):
	fpath = os.path.join("${1}", file)
	$0
endsnippet

snippet check_dir
if not os.path.isdir(${1:fpath}):
	print('%s: not found' % $1)
	$0
endsnippet

snippet check_command
if os.system('command -v ${1:cmake}') != 0:
	print('$1: not found')
	$0
endsnippet

snippet pr
print(${1})
endsnippet

snippet pprint
import pprint; pp = pprint.PrettyPrinter(indent=2);
pp.pprint(${1})
endsnippet

snippet print_notify
import os; os.system('notify-send "Debug" "${1:%s}"' % (${2}))
endsnippet

snippet print_trace
import traceback
import sys
traceback.print_exc(file=sys.stdout)
endsnippet

snippet prexec_time
start_time = time.perf_counter()
${VISUAL}$0
end_time = time.perf_counter()
run_time = end_time - start_time
print(f'{run_time:.4f} secs')
endsnippet

snippet usleep
time.sleep(${1:100}/1000000.0)
endsnippet
