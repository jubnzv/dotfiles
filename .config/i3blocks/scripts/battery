#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;
use Desktop::Notify;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;

# read the first line of the "acpi" command output
open (ACPI, 'acpi -b |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);

# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;
$full_text = "";

if ($status eq 'Discharging') {
	# $full_text .= 'DIS';
} else {
    $full_text .= ' ';
}

if ($percent < 10) {
    $full_text .= "";
} elsif ($percent < 30) {
    $full_text .= "";
} elsif ($percent < 50) {
    $full_text .= "";
} elsif ($percent < 75) {
    $full_text .= "";
} elsif ($percent <= 100) {
    $full_text .= "";
}

$full_text .= " $percent%";
$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
	$full_text .= " ($1)";
}

# print text
print "$full_text\n";
print "$short_text\n";

# consider color and urgent flag only on discharge
if ($status eq 'Discharging') {

	if ($percent < 20) {
		print "#dc322f\n";

		# Send desktop notification
		my $notify = new Desktop::Notify;
		my $notification = $notify->create(summary => "Low Battery\n",
						   body => "($percent)",
						   timeout => 5000);
		$notification->show();

	} elsif ($percent < 40) {
		print "#cb4b16\n";
	} elsif ($percent < 60) {
		print "#b58900\n";
	} elsif ($percent < 85) {
		print "#859900\n";
	}
} else {
	if ($percent < 20) {
		print "#839461\n";
	}
}

exit(0);
