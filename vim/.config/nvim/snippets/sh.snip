snippet exit_failure
alias exf
options head
    exit 1
    $0

snippet exit_success
alias exs
options head
    exit 0
    $0

snippet print
alias   pr
    echo "$0"

snippet log
alias logger
    logger "$0"

snippet check_args
options head
    if [ $# -ne ${1:1} ]; then
        echo "Usage: \$0 $1"
        exit 1
    fi
    $0

snippet check_command
options head
    if [[ ! -x "$(command -v ${1})" ]]; then
        echo "$1: command not found"
        exit 1
    fi
    $0

snippet check_dir
options head
    if [ ! -d ${1:/} ]; then
        echo "$1 is inaccessible"
        exit 127
    fi
    $0

snippet check_file
options head
    if [ ! -f ${1:/} ]; then
        echo "$1 is inaccessible"
        exit 127
    fi
    $0

snippet check_root
options head
    if [[ $EUID -ne 0 ]]; then
            echo "Please run this script as root."
            exit 1
    fi
    $0

snippet check_connection
options head
    wget -q --spider http://google.com
    if [ ! $? -eq 0 ]; then
        echo "Please connect to the internet before continuing."
    fi
    $0

snippet check_docker_image
options head
    if [[ "\$(docker images -q ${1:myimage\:mytag} 2> /dev/null)" == "" ]]; then
        echo "docker: Could not find image '$1' locally."
        exit 127
    fi
    $0

snippet check_systemd_service
options head
    if [[ "\$(systemctl is-active ${1:service})" != "active" ]]; then
        echo "systemctl: Starting '$1'..."
        systemctl start $1
    fi
    $0

snippet file_filename
options head
    filename="\${${1:varname}%.*}"$0

snippet file_extension
options head
    fileext="\${${1:varname}##.*}"$0

snippet for_dirs
options head
    for [ d in * ]; do
        if [[ -d $d ]]; then
            ${0}
        fi
    done

snippet strict_mode
options head
    set -euo pipefail

snippet exit_err
options head
    ext=$?
    if [[ $ext -ne 0 ]]; then
        exit $ext
    fi

snippet fdisk_partitioning
options head
    (
    echo o   # Create a new empty DOS partition table
    echo n   # Add a new partition
    echo p   # Primary partition
    echo 1   # Partition number
    echo     # First sector
    echo     # Last sector
    echo w   # Write changes
    ) | fdisk ${0}

snippet pushd_popd
options head
    pushd ${1:./} >/dev/null
    ${0}
    popd >/dev/null

snippet getopts_verbose
options head
    vison=0

    while getopts "iv" option; do
        case "$option" in
            v)
                echo "verbose mode"
                vison=1 ;;
            *)
                exit 1 ;;
        esac
    done
    shift $(( OPTIND - 1 ))

    (( vison )) && echo 'Verbose mode'
    $0

snippet getnum_cores
options head
    num_cores=$(grep -c ^processor /proc/cpuinfo)
    if [ -z "$num_cores" ]; then
        num_cores=4
    fi
    $0

