" See :actionlist for the available IDE mappings.
"
let mapleader = " "

set scrolloff=3  " 3 lines above/below cursor when scrolling
set incsearch hlsearch
set relativenumber
set visualbell
set noerrorbells
set surround
set showmode

" Integrate with system clipboard
set clipboard=unnamedplus,unnamed

set timeoutlen=200
inoremap jj <Esc>
inoremap <C-n> <down:>
inoremap <C-p> <up>

" Insert newline without entering insert mode
nmap zj o<Esc>k
nmap zk O<Esc>j

vnoremap gcc :action CommentByBlockComment<cr>

nmap <leader>w :action SaveAll<CR>

" Keep selected text selected when fixing indentation
vnoremap < <gv
vnoremap > >gv

" Tabs / buffers / windows
nnoremap <leader><F4> :action CloseContent<cr>
nnoremap <leader>wn :action CloseAllNotifications<cr>
nnoremap <leader>wh :action HideSideWindows<cr>

" Folding
nnoremap zR :action ExpandAll<cr>
nnoremap zM :action CollapsAll<cr>

" Reload .ideavimrc
nnoremap ,R :source ~/.ideavimrc<cr>

" Search routines
nnoremap <leader>fs :action FindInPath<cr>
nnoremap <leader>h :noh<cr>

nnoremap <A-p> :action GotoFile<cr>

" Source navigation
nnoremap <leader>gu :action FindUsages<cr>
nnoremap <leader>gc :action GotoClass<cr>
nnoremap <leader>gd :action GotoDeclaration<cr>
nnoremap <leader>gs :action GotoSymbol<cr>
nnoremap <leader>gr :action GotoRelated<cr>

" Debugging && errors actions
nnoremap <leader>bb :action ToggleLineBreakpoint<cr>
nnoremap <leader>bs :action ViewBreakpoints<cr>
nnoremap ]e :action GotoNextError<cr>
nnoremap [e :action GotoPreviousError<cr>

" Same as LSP actions in nvim
nmap ,d :action ShowErrorDescription<cr>
nmap <leader>lf :action ReformatCode<cr>

" VCS / local history
nnoremap [v :action VcsShowPrevChangeMarker<cr>
nnoremap ]v :action VcsShowNextChangeMarker<cr>
" in PyCharm works like `git blame`
nnoremap <leader>va :action Annotate<cr>
nnoremap <leader>vh :action LocalHistory<cr>
nnoremap <leader>vu :action ChangesView.Revert<cr>
nnoremap <leader>vz :action Git.Stash<cr>
nnoremap <leader>vx :action Git.Unstash<cr>

" Diff mode
nnoremap [c :action NextDiff<cr>
nnoremap ]c :action PreviousDiff<cr>
" nnoremap dr :action Diff.ApplyRightSide<cr>
" nnoremap dl :action Diff.ApplyLeftSide<cr>

" See docs / implementation
nnoremap <leader>qi :action QuickImplementations<cr>
nnoremap <leader>qq :action QuickJavaDoc<cr>

" Bookmarks
nnoremap <leader>m :action ShowBookmarks<cr>
nnoremap mt :action ToggleBookmark<cr>
nnoremap ]b :action GotoNextBookmark<CR>
nnoremap [b :action GotoPreviousBookmark<CR>
nnoremap mb :action ToggleBookmarkWithMnemonic<cr>
nnoremap mq :action ToggleBookmark1<cr>
nnoremap mw :action ToggleBookmark2<cr>
nnoremap me :action ToggleBookmark3<cr>
nnoremap mf :action ToggleBookmark4<cr>
nnoremap mj :action ToggleBookmark5<cr>
nnoremap mi :action ToggleBookmark6<cr>
nnoremap mo :action ToggleBookmark7<cr>
nnoremap mp :action ToggleBookmark8<cr>
nnoremap 'q :action GotoBookmark1<cr>
nnoremap 'w :action GotoBookmark2<cr>
nnoremap 'e :action GotoBookmark3<cr>
nnoremap 'f :action GotoBookmark4<cr>
nnoremap 'j :action GotoBookmark5<cr>
nnoremap 'i :action GotoBookmark6<cr>
nnoremap 'o :action GotoBookmark7<cr>
nnoremap 'p :action GotoBookmark8<cr>

" Ace == easymotion
nnoremap <A-;> :action AceAction<CR>
nnoremap <A-l> :action AceLineAction<CR>
